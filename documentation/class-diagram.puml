@startuml
'https://plantuml.com/class-diagram

abstract class AbstractList
abstract AbstractCollection
interface List
interface Collection

List <|-- AbstractList
Collection <|-- AbstractCollection

Collection <|- List
AbstractCollection <|- AbstractList
AbstractList <|-- IncomingEvent

RawEvent --> RawEventStatusEnum

enum RawEventStatusEnum {
    TO_BE_CONSUMED
    CONSUMED
}

class RawEvent {
    + id: number
    + rawContent: string
    + status: RawEventStatusEnum
    + {field} receivedAt: datetime = Now()
    + processedAt: datetime

    + extractAccountingEvent(): AccountingEvent

    + {static} findById(id: number): RawEvent
    + {static} findByStatus(status: RawEventStatusEnum): List<RawEvent>
}

interface AccountingEvent {
    + constructFromRawContent(rawContent: string): AccountingEvent
}

interface IncomeEvent extends AccountingEvent

interface ExpenseEvent extends AccountingEvent

class AccountingEventFactory {
    + buildAccountingEventFromRawContent(rawContent: string): AccountingEvent
}

@enduml
